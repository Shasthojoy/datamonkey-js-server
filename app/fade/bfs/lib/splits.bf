ExecuteAFile ("../Shared/HyPhyGlobals.ibf");ExecuteAFile ("../Shared/GrabBag.bf");ExecuteAFile ("../Shared/ReadDelimitedFiles.bf");ExecuteAFile ("../Shared/DBTools.ibf");fscanf		 (stdin, "String", arg);arg = splitOnRegExp(arg,"-");if (Abs (arg) < 2){	fprintf (stdout, "");	return 0;}trees = _getTreeDescription(slacDBID, 0+arg[1]);if (Abs(trees)){	fprintf (stdout, Abs(trees["TREES"]));	for (k = 0; k < Abs(trees["TREES"]); k = k + 1)	{		fprintf (stdout, "\n", Format((trees["LEFT"])[k],20,0), "-", Format((trees["RIGHT"])[k],20,0), "\n");		if (Abs (arg) > 2)		{			ExecuteCommands ("Tree T = " + (trees["TREES"])[k]);			TS = RerootTree(T,arg[2]);			if (Abs(TS) == 0)			{				TS = RerootTree(T,arg[2]&&1);			}				ExecuteCommands ("Tree T = " + TS);			fprintf (stdout, Format(T,1,1));		}		else		{			treeS = (trees["TREES"])[k]^{{"\\:[\\-]?inf",""}};			fprintf (stdout, treeS);		}	}}