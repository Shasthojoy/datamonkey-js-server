fprintf (stdout, "<div id='all_enclosure' style = 'visibility:hidden;'><form  name='modelForm'  method='POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"dispatchAnalysis.pl' onSubmit=\"return CheckValidDnDS()\">\n",
					 "<input name='filename' type='hidden' value='"  ,filePrefix,"'>\n",
					 "<input name='genCodeID' type='hidden' value='",genCodeID,"'>\n",
					 "<input type='Hidden' name='sequences' value='",ds.species,"'>\n",
					 "<input type='Hidden' name='sites' value='",ds.sites,"'>\n",
					 "<input type='Hidden' name='partitions' value='",_pCount,"'>\n");
	
fprintf (stdout, "<div class = 'RepClassSM'>Method: <SELECT NAME='method' onChange='setBF()'>");
					 
if (genCodeID>=0)
{
	if (ds.species<=maxSLACSize)
	{
	    fprintf (stdout,"<OPTION VALUE = '0'>SLAC");
	}
	if (ds.species<=maxFELSize)
	{
		fprintf (stdout, "<OPTION VALUE = '1'>FEL");
		fprintf (stdout, "<OPTION VALUE = '2'>IFEL");
	}
	if (ds.species<=maxRELSize)
	{
		fprintf (stdout, "<OPTION VALUE = '3' >REL");
		fprintf (stdout, "<OPTION VALUE = '4' >PARRIS");
	}
	if (ds.species<=maxGABranchSize)
	{
		fprintf (stdout, "<OPTION VALUE = '5' >GA-Branch");
	}

	if (_pCount < 2)
	{
		if (ds.species<=maxBSRSize)
		{
			fprintf (stdout, "<OPTION VALUE = '9' >Branch-site REL");
		}	
	}

	if (ds.species<=maxMEMESize)
	{
		fprintf (stdout, "<OPTION VALUE = '12' >MEME");
	}
	if (ds.species<=maxFUBARSize)
	{
		fprintf (stdout, "<OPTION VALUE = '13' >FUBAR");
	}
	if (ds.species<=maxEVFSize)
	{
		fprintf (stdout, "<OPTION VALUE = '42' >Evolutionary Fingerprintng");
	}
	if (ds.species<=maxCMSSize)
	{
		fprintf (stdout, "<OPTION VALUE = '55' >GA-Codon Model Selector");
	}
	if (ds.species <= maxToggleSize)
	{
		fprintf (stdout, "<OPTION VALUE = '69' >TOGGLE");
	}
	if (ds.species <= maxPRIMESize)
	{
		fprintf (stdout, "<OPTION VALUE = '71' >PRIME");
	}
}

if (ds.species<=maxBGMSize && _pCount < 2)
{
	fprintf (stdout, "<OPTION VALUE = '6' >SPIDERMONKEY/BGM");	
}

printRVDIVs = 0;
if (ds.species<=maxSBPSize)
{
	fprintf (stdout, "<OPTION VALUE = '20' >SBP");	
	printRVDIVs = 1;
}
if (ds.species<=maxGARDSize)
{
	fprintf (stdout, "<OPTION VALUE = '21' >GARD");	
	printRVDIVs = 1;
}
if (ds.species<=maxASRSize)
{
	fprintf (stdout, "<OPTION VALUE = '22' >ASR");	
	printRVDIVs = 1;
}

if ( genCodeID == (-2) ) {
	if (ds.species<=maxDEPSSize)
	{	
		fprintf (stdout, "<OPTION VALUE = '60' >DEPS");	
		printRVDIVs = 1;
	}
	if (ds.species<=maxFADESize)
	{	
		fprintf (stdout, "<OPTION VALUE = '61' >FADE");	
	}
}


if (genCodeID != (-2))
{
	fscanf  ("modeltable","Raw",rehash);
	fscanf  ("modeltable.js","Raw",model_js);
}
else
{
	ExecuteAFile ("ProteinModels/modellist.ibf");
	howManyModels = Abs(modelList);
	
	MODEL_TABLE_STRING = "";
	MODEL_TABLE_STRING*256;
	MODEL_TABLE_NOFREQ_STRING="";
	MODEL_TABLE_NOFREQ_STRING*256;
	TOOLTIPS_STRING = "";
	TOOLTIPS_STRING*256;
	TOOLTIPS_STRING * "var tooltip_strings = new Array();";
	MODEL_TABLE_STRING * "<table style = 'margin:5px;'><tr class = 'TRReport1'><td>Rate matrix</td><td><SELECT id = 'AAMatrix' name = 'ratematrix' onmouseover = \"Tip(tooltip_strings[document.modelForm.ratematrix.selectedIndex])\">";
	MODEL_TABLE_NOFREQ_STRING * "<SELECT id = 'AAMatrix2' name = 'ratematrix2' onmouseover = \"Tip(tooltip_strings[document.modelForm.ratematrix.selectedIndex])\">";
	
	for (k=0; k<howManyModels; k=k+1)
	{
		MODEL_TABLE_STRING * ("<OPTION VALUE = '" + (modelList[k])["File"] + "'>" + (modelList[k])["Name"] + "\n");
		MODEL_TABLE_NOFREQ_STRING * ("<OPTION VALUE = '" + (modelList[k])["File"] + "'>" + (modelList[k])["Name"] + "\n");
		TOOLTIPS_STRING * ("\ntooltip_strings[" + k + "] = '" + (modelList[k])["Description"] + "';");
		
	}
	MODEL_TABLE_NOFREQ_STRING * "</SELECT>";
	MODEL_TABLE_STRING * ("</SELECT><tr class = 'TRReport2'><td>Frequencies</td><td><SELECT id = 'AAFreqs' name = 'frequencies' onmouseover = \"Tip(freq_tt_strings[document.modelForm.frequencies.selectedIndex])\"><OPTION VALUE = '0'>Model-defined<OPTION VALUE = '1'>Empirical (+F) </SELECT>");
	MODEL_TABLE_STRING * "</td></tr>";
	MODEL_TABLE_STRING * "</table>";
	
	fscanf  	 ("modeltableaa","Raw",rehash);
	fscanf       ("modeltableaa.js","Raw",model_js);
	
	MODEL_TABLE_NOFREQ_STRING*0;
	MODEL_TABLE_STRING * 0;
	TOOLTIPS_STRING*0;
	
	model_js = model_js^
        {
                {
                        "DATAMONKEYTOOLTIPS",TOOLTIPS_STRING
                }
        };

	rehash = rehash^
	{
		{
			"MODEL_TABLE_HERE",MODEL_TABLE_STRING
		}
	};
	
	
	rehash = rehash^
	{
		{
			"MODEL_TABLE_NOFREQ_HERE",MODEL_TABLE_NOFREQ_STRING
		}
	};
	
	/*rehash = rehash^
	{
		{
			"DATAMONKEYTOOLTIPS",TOOLTIPS_STRING
		}
	};*/
	rehash = rehash^
	{
		{
			"BASE_CGI_URL_STRING",BASE_CGI_URL_STRING
		}
	};
}

if (printRVDIVs)
{
	fscanf  ("ratevariation","Raw",rehash2);	
	rehash += rehash2;
}

rehash = rehash^
{
	{
		"BASEL_URL_STRING",BASEL_URL_STRING
	}
};



fprintf (stdout,"</select> <a href='",BASEL_URL_STRING,"help/index.php' target = \"_blank\" class = 'INFO'>Help</a></div>");

fprintf (stdout, "<DIV class = 'RepClassSM' id = 'treeMode'>Use this tree set:");
first = 1;
for (k = 0; k < Abs(hasTreeMode); k=k+1)
{
	if (hasTreeMode[k])
	{
		fprintf (stdout, "<span id = 'treeModeChoice", k, "'><input  name = 'treeMode' type = 'radio' value = ",k);
		if (first)
		{
			fprintf (stdout, " checked");
			first = 0;
		}
		fprintf (stdout, ">",_getTreeDescriptionTag(k) ,"</span>\n");
	}
}
fprintf (stdout, "</DIV>");

seqCount = Abs(dbSeqNames);
if (seqCount)
{
	fprintf (stdout, "<DIV class = 'RepClassSM' id = 'rootOn'>Root on: <SELECT NAME='root'>");
	for (k = 0; k < seqCount; k = k + 1)
	{
		fprintf (stdout, "<OPTION>", dbSeqNames[k],"\n");
	}
	fprintf (stdout,"</SELECT> <a href='",BASEL_URL_STRING,"help/rooting.php' target = \"_blank\" class = 'INFO'>Help</a></DIV>");
}

fprintf (stdout, rehash);
fprintf	(stdout, "<div class = 'RepClassSM'>Click to <INPUT TYPE='Submit' VALUE='Run'> the analysis.</div></form>");
fprintf (stdout, model_js ^ {{"ONLOAD_HANDLER", modelString+"SetMethodByValue("+jobKind+");setBF();document.getElementById('all_enclosure').style.visibility = 'visible';"}});

if (genCodeID != (-2)) {
	fprintf (stdout,"\n<DIV class='RepClassSM' id = 'run_model_selector' style='background-color: rgb(64,0,128); color: white;'>",
				"\n<form  name='modelChooseForm' method='POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"dispatchAnalysis.pl'>",
				"\n<input name='filename' type='hidden' value='" ,filePrefix,"'>",
				"<input type='Hidden' name='sequences' value='",ds.species,"'>\n",
				"<input type='Hidden' name='sites' value='",ds.sites,"'>\n",
				"<input type='Hidden' name='partitions' value='",_pCount,"'>\n",
				"<input type='Hidden' name='method' value='10'>\n",
				"\nUnsure which substitution model to use?<INPUT TYPE='Submit' VALUE='Execute'> an automatic model selection tool.</form></div>\n");

}
else {
	fprintf (stdout,"\n<DIV class='RepClassSM' id = 'run_model_selector'  style='background-color: rgb(64,0,128); color: white;'>",
				"\n<form  name='modelChooseForm' method='POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"dispatchAnalysis.pl'>",
				"\n<input name='filename' type='hidden' value='" ,filePrefix,"'>",
				"<input type='Hidden' name='sequences' value='",ds.species,"'>\n",
				"<input type='Hidden' name='sites' value='",ds.sites,"'>\n",
				"<input type='Hidden' name='partitions' value='",_pCount,"'>\n",
				"<input type='Hidden' name='method' value='11'>\n",
				"\nUnsure which substitution model to use?<INPUT TYPE='Submit' VALUE='Execute'> an automatic model selection tool.</form></div>\n");	
}
fprintf (stdout, "</div>");

