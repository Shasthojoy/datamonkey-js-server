function rateMatrixToPS (chars,rateMatrix, genCode, title){	ExecuteAFile("../Shared/PostScriptNew.bf");	skipCodeSelectionStep = 1;	ExecuteAFile("../Shared/chooseGeneticCode.def");	ApplyGeneticCodeTable (genCode);		one_step = {21,21};		for (h=0; h<64; h=h+1)	{		if (_Genetic_Code[h]==10) 		{			hshift = hshift+1;			continue; 		}		vshift = hshift;		for (v = h+1; v<64; v=v+1)		{			diff = v-h;			if (_Genetic_Code[v]==10) 			{				vshift = vshift+1;				continue; 			}			if ((h$4==v$4)||((diff%4==0)&&(h$16==v$16))||(diff%16==0))			{				aa1 = _Genetic_Code[0][h];				aa2 = _Genetic_Code[0][v];				if (aa1 != aa2)				{					one_step [aa1][aa2] = 1;					one_step [aa2][aa1] = 1;				}				}		}	}		codon_order = "FLIMVSPTAYXHQNKDECWRG";	codon_idx   = {};		for (k=0; k<=20; k=k+1)	{		codon_idx[codon_order[k]] = k;	}		psFigure = "";	psFigure * 8192;	psFigure * _HYPSPageHeader (445,500, "Protein Rate Matrix Plot");	psFigure * "\n";	psFigure * _HYPSSetFont ("Times-Roman", 12);	psFigure * "\n";	psFigure * _HYPSTextCommands(0);	psFigure * "/box {\n0 20 rlineto \n20 0 rlineto \n0 -20 rlineto \nclosepath } def\n 0 30 translate\n";		offset = 24;		maxVal = 0;	for (h=0; h<20; h=h+1)	{		for (v=0; v<20; v=v+1)		{			if (h!=v)			{				maxVal = Max(maxVal,rateMatrix[h][v]);			}		}	}		charsToCodonOrder 	= {};		for (k=0; k<=20; k=k+1)	{		charsToCodonOrder[k] = codon_idx[chars[k]];	}		reordering = {};	reordering["A"] = 0;	reordering["C"] = 1;	reordering["G"] = 2;	reordering["I"] = 3;	reordering["L"] = 4;	reordering["M"] = 5;	reordering["P"] = 6;	reordering["S"] = 7;	reordering["T"] = 8;	reordering["V"] = 9;	reordering["D"] = 10;	reordering["E"] = 11;	reordering["N"] = 12;	reordering["Q"] = 13;	reordering["F"] = 14;	reordering["W"] = 15;	reordering["Y"] = 16;	reordering["H"] = 17;	reordering["K"] = 18;	reordering["R"] = 19;		rk = Rows (reordering);		for (h=0; h<20; h=h+1)	{		h2 = reordering[chars[h]];		label = rk[h];		psFigure * ("0 setgray\n10 "+(offset+(19-h)*20+6)+" \n("+label+") centertext\n");		psFigure * ("0 setgray\n"+(offset+410)+" "+(offset+(19-h)*20+6)+" ("+label+") centertext\n");		psFigure * ("0 setgray\n"+(offset+h*20+10)+" 10 ("+label+") centertext\n");		psFigure * ("0 setgray\n"+(offset+h*20+10)+" "+(405+offset)+" ("+label+") centertext\n");		for (v=0; v<20; v=v+1)		{			if (h!=v)			{				v2 = reordering[chars[v]];				label2 = chars[v];				psFigure * ("newpath\n"+(offset+v2*20)+" "+(offset+(19-h2)*20)+" moveto\n");				greyColor = 1-rateMatrix[h][v]/maxVal;				psFigure * (""+greyColor+" setgray\nbox fill\n");				if (one_step[charsToCodonOrder[h]][charsToCodonOrder[v]])				{					if (greyColor>0.5)					{						psFigure * ("0 setgray\n");					}					else					{						psFigure * ("1 setgray\n");									}					psFigure * ("\nnewpath\n"+(offset+v2*20+10)+" "+(offset+(19-h2)*20+10)+" 5 0 360 arc\n\nstroke\nclosepath\n");				}			}		}	}		psFigure * ("\n"+offset+" "+offset+" translate\n0 setgray\nnewpath\n0 0 moveto\n0 400 lineto\n400 400 lineto\n400 0 lineto\n0 0 lineto\nstroke\nclosepath");		psFigure * ("\n\nnewpath\n0 200 moveto\n200 200 lineto\n200 400 lineto\nstroke");	psFigure * ("\n\nnewpath\n200 120 moveto\n200 200 lineto\n280 200 lineto\n280 120 lineto\nclosepath stroke");	psFigure * ("\n\nnewpath\n280 120 moveto\n340 120 lineto\n340 60 lineto\n280 60 lineto\nclosepath stroke");	psFigure * ("\n\nnewpath\n340 60 moveto\n400 60 lineto\n400 0 lineto\n340 0 lineto\nclosepath stroke");	psFigure * ("\n0 -30 translate\n 225.5 460 (Rate matrix plot for " + title + ") centertext\n 0 -20 translate\n");	tableText = {3,1};	tableText [0] = "Shading indicates relative substitution rates (black = max, white = 0)";	tableText [1] = "Circles show residue pairs that can be exchanged with one nucleotide substitution";	tableText [2] = "Amino-acids are grouped into 4 Stanfel classification clusters";	psFigure * _HYPSTextTable (400,30,12,tableText,tableText["0"]);	psFigure * ("\nshowpage");	psFigure * 0;	return psFigure;}