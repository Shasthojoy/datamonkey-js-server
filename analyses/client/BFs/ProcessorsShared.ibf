function displayModelMatrix (modelDescString,characters,rateMatrix,rvChoice,cI)
{

	fprintf (stdout, "<DIV CLASS='RepClassSM' style = 'width:100%; overflow: auto;'><b>Substitution model</b><p>Model description:<b>",modelDescString,
					  "</b><p>Substitution rate matrix (scaled to one expected substitution per site). <br>Color intensity = relative rate (brighter - higher, lighter - lower).");
					  
	
	stateSpaceDimension = Columns(characters);
	fprintf (stdout, "<TABLE BORDER = '0' CELLSPACING='1' style = 'margin:12px'><TR class = 'HeaderClass' style = 'font-size:10px;'><td></td>");
	
	for (c = 0; c < stateSpaceDimension; c = c + 1)
	{
		fprintf (stdout, "<td>", characters[c], "</td>");
	}
	
	fprintf (stdout, "</tr>");
	
	rateMax			   = Max(rateMatrix,0);
	
	for (r = 0; r < stateSpaceDimension; r = r + 1)
	{	
		fprintf (stdout, "<TR class = 'TRReport1' style = 'font-size: 10px;background-color: transparent;'>");
		fprintf (stdout, "<TD class = 'HeaderClass' style = 'font-size: 10px'><b>", characters[r], "</b></TD>");
	
		for (c = 0; c < stateSpaceDimension; c = c + 1)
		{
			if (r != c)
			{
				meColor  = ((1-rateMatrix[r][c]/rateMax)*255$1);
				meColor  = "<TD style = 'color: black; background-color: RGB(255,"+meColor+","+meColor+");'>";
	
				fprintf (stdout, meColor,Format(rateMatrix[r][c],3,1),"</td>");
			}
			else
			{
				fprintf (stdout, "<td>-</td>");		
			}
		}	
		fprintf (stdout, "</tr>");
	}
	fprintf (stdout, "</table>");
	
	if (rvChoice)
	{
		if (rvChoice == 1)
		{
			fprintf (stdout, "<p>Inferred distribution of rates across sites");
		}	
		else
		{
			fprintf (stdout, "<p>Using the beta-gamma distribution of rates across sites");	
		}
	
		fprintf (stdout, "<TABLE BORDER = '0' CELLSPACING='1' style = 'margin:10px'><TR class = 'HeaderClass' style = 'font-size:12px;'><td>Rate</td><td>Weight</td></tr>");
		for (k = 0; k < Columns (cI); k=k+1)
		{
			fprintf (stdout, "<TR class = 'TRReport",1+(k%2),"' style = 'font-size: 12px;'>");
			fprintf (stdout, "<TD>", Format (cI[0][k],7,3), "</TD><TD>", Format (cI[1][k],7,3),"</TD></TR>");
		}
		fprintf (stdout, "</table>");
	}
	
	fprintf (stdout, "</DIV>");
	
	return 0;
}