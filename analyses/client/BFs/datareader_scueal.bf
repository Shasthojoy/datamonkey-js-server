/*------------------------------------------------------------------------------------*/fscanf (stdin,"String", fileName);ExecuteAFile	("../Shared/HyPhyGlobals.ibf");ExecuteAFile	("../Shared/ReadDelimitedFiles.bf");ExecuteAFile	("../Shared/GrabBag.bf");/* first check for MEGA headers */fscanf (fileName, "String", testForMega);if (testForMega == "#mega"){	fscanf (fileName, "Lines", testForMega);	fprintf (fileName, CLEAR_FILE, KEEP_OPEN);	for (k=0; k<Columns(testForMega); k=k+1)	{		if ((testForMega[k])[0] != "!")			{			fprintf (fileName, testForMega[k], "\n");			}	}	fprintf (fileName, CLOSE_FILE);	}DataSet 			ds 	=  ReadDataFile (fileName);	if (ds.species > maxSCUEALSize || ds.sites > maxDMSites){	defaultErrorOut ("Your data set is too large ("+ds.species+" sequences on "+ds.sites+" sites). We currently reject files with more than " + maxSCUEALSize + " sequences or " + maxDMSites + " sites. "+			  "We'll increase the numbers when we acquire better dedicated hardware. Alternatively, you can download <a href='http://www.hyphy.org/pubs/SCUEAL'>SCUEAL</a> to run subtyping locally.");		if (ds.sites < maxDMSites)	{		alignment_count = ds.species $ maxSCUEALSize;		if (alignment_count%maxSCUEALSize)		{			alignment_count = alignment_count + 1;		}				tempFileName = splitFilePath (fileName);		fprintf (stdout, "<DIV CLASS = 'RepClassSM'>Datamonkey has split your alignment into ", alignment_count, " parts that can be individually submitted to SCUEAL. <p><DL>");		for (k = 0; k < alignment_count; k = k+1)		{			testFileName = fileName;			while (!testFileName)			{				shortFileName = tempFileName ["FILENAME"] + Random (0,1000000)$1 + ".1";				testFileName = tempFileName ["DIRECTORY"] + shortFileName;			}			upto = Min (maxSCUEALSize*(k+1), ds.species)-1;			fspec = ""+k*maxSCUEALSize + "-" + upto;			DataSetFilter f = CreateFilter (ds, 1, "", fspec);			fprintf (testFileName, CLEAR_FILE, f);			fprintf (stdout, "\n<DT CLASS = 'DMDT'>Sequences ", 									k*maxSCUEALSize+1, " to ", 									upto+1, 									"<DD><FORM style = 'display: inline;' METHOD = 'POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"scueal2.pl'><input type = 'hidden' name = 'filename' value = '",shortFileName,"'><input type=submit value='Upload' style = 'background-color:purple; color:white; font-size:18px;'></form>"); 		}				fprintf (stdout, "</DIV>");	}		return 0;}if (ds.sites < 3){	defaultErrorOut("This doesn't seem to be a valid alignment file. Please refer to the list of file <a href='http://www.hyphy.org/docs/shared/dataformats.html' target = '_blank'>formats</a> that HyPhy supports."+					 "Also make sure that you are uploading a <b>plain-text</b> file and not an RTF, Micro$oft Word, etc document. Also, some browsers with poor standard compliance (such as Microsoft Explorer) can add garbage characters to the beginning and the end of uploaded files."+					 "Please make sure the file has a .txt extension and is saved as plain text if you are using a Microsoft browser.");	return 0;}DataSetFilter		filteredData = CreateFilter (ds,1);GetDataInfo			(alphabet, filteredData, "CHARACTERS");if (Columns (alphabet) != 4){	defaultErrorOut ("This does not appear to be a nucleotide sequence alignment");	return 0;}if (alphabet[0]!="A" || alphabet[1]!="C" || alphabet[2]!="G" || alphabet[3]!="T"){	defaultErrorOut ("This does not appear to be a nucleotide sequence alignment");	return 0;}fprintf (stdout, "<H1 class='SuccessCap'>Successful file upload</H1><DIV class = 'RepClassSM'>Read <b>",ds.species,"</b> sequences and <b>",ds.sites,"</b> alignment columns.</DIV><DIV class = 'RepClassSM'>");fprintf (stdout, "<FORM method='POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"dispatchAnalysis.pl'>",				 "Reference alignment <SELECT NAME='reference'><OPTION VALUE='0'>HIV-1 POL");filePathInfo = splitFilePath (fileName);jobID		 = filePathInfo["FILENAME"] + "." + filePathInfo["EXTENSION"];fprintf (stdout,"</SELECT>",				"<input type = 'Hidden' name = 'sequences' value = '",ds.species,"'>",				"<input type = 'Hidden' name = 'sites' value = '",ds.sites,"'>",				"<input type = 'Hidden' name = 'partitions' value = '1'>",				"<input type = 'Hidden' name = 'genCodeID' value = '0'><input type = 'Hidden' name = 'method' value = '50'><input type='Hidden' name='filename' value='",jobID,"'></DIV><DIV style = 'margin:10px; text-align:center;'> <input type='Submit' value='Subtype sequences' style = 'background-color:purple; color:white; font-size:18px;'> </FORM></DIV>");ExecuteAFile("../Shared/DBTools.ibf");slacDBID = _openCacheDB      (jobID);fileInformation 						 = {};fileInformation ["Sites"] 			 = "INTEGER";fileInformation ["Sequences"] 		 = "INTEGER";fileInformation ["Timestamp"] 		 = "REAL";_CheckDBID (slacDBID,"SCUEAL_FILE_INFO",fileInformation);record = {};record ["Sequences"] = ds.species;record ["Timestamp"] = Format(Time(1),20,0);record ["Sites"]     = ds.sites;_InsertRecord (slacDBID,"SCUEAL_FILE_INFO", record);_closeCacheDB (slacDBID);