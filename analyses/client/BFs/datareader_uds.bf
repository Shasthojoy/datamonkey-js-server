fscanf (stdin,"String", zipFile);fscanf (stdin,"Number", gotQual );fscanf (stdin,"String", fnaFile );fscanf (stdin,"String", originalFileName );fscanf (stdin,"Number", preProcess);if ( gotQual ) {	fscanf (stdin,"String", qualFile);}gencodeID = 0; /*hard coded for now*/if ( preProcess ) { /*renames the files to upload*.fna */	fscanf ( fnaFile, "Raw", fnaString );	outfile = "";	outfile = zipFile + ".fna";	fprintf ( outfile, fnaString );		if ( gotQual ) {		fscanf ( qualFile, "Raw", qualString );		outfile = "";		outfile = zipFile + ".qual";		fprintf ( outfile, qualString );	}}else {		ExecuteAFile	("../Shared/HyPhyGlobals.ibf");	ExecuteAFile	("../Shared/ReadDelimitedFiles.bf");	ExecuteAFile	("../Shared/GrabBag.bf");	ExecuteAFile	("../Shared/DBTools.ibf");	ExecuteAFile    ("../Shared/hiv_1_ref_sequences.ibf");		filePathInfo = splitFilePath (zipFile);	jobID		 = filePathInfo["FILENAME"] + "." + filePathInfo["EXTENSION"];		slacDBID = _openCacheDB      (jobID);		DataSet 			ds 	=  ReadDataFile (fnaFile);	DataSetFilter		filteredData = CreateFilter (ds,1);		getFile = "";	getFile = BASE_DM_PATH + "js/uds_togglers.js";	fscanf ( getFile, "Raw", jsString );		fprintf (stdout, jsString, "<script type='text/javascript' src='http://www.datamonkey.org/wz_tooltip.js'></script><script type='text/javascript'>totalAvailableGenes=",Rows ( RefSeqNames ),";</script>");			fprintf (stdout, "<H1 class='SuccessCap'>Successful file upload</H1><DIV class = 'RepClassSM'>Read <b>",ds.species,"</b> reads from your 454 file.</DIV>");		fprintf (stdout, "<FORM name= 'optionsForm' method='POST' enctype='multipart/form-data' action='",BASE_CGI_URL_STRING,"UDS_launchQualityFilter.pl'>\n");		if ( gotQual ) {		fprintf ( stdout, "<DIV class = 'RepClassSM'>Detected a *.qual file with PHRED scores. Please set the quality filtering options below (see <a href='", BASEL_URL_STRING, "help/uds.php' class='INFO'>HELP</a> for more information).<br/><br/>" );		fprintf ( stdout, "<SPAN id = 'minPHRED'>Minimum PHRED score for inclusion of sites (recommended 10-20): </span><INPUT TYPE = 'Text' NAME = 'phredScore' VALUE = '15' MAXLENGTH = '15' SIZE = '10'<br/>" );		fprintf ( stdout, "<SPAN id = 'minimumLength'>Minimum # sites with PHRED score > minimum for inclusion of reads/fragments of reads: </span><INPUT TYPE = 'Text' NAME = 'minFragLength' VALUE = '75' MAXLENGTH = '15' SIZE = '10'>" );		fprintf ( stdout, "</DIV>" );	}	else {		fprintf ( stdout, "<DIV class = 'RepClassSM'><DIV CLASS = 'ErrorTagSM'><b>Warning:</b> No *.qual file detected. Analyses will proceed without PHRED quality filtering (see <a href='", BASEL_URL_STRING, "help/uds.php' class='INFO'>HELP</a> for more information)." );		fprintf ( stdout, "</DIV></DIV>" );	}		fprintf ( stdout, "<DIV CLASS = 'RepClassSM'>Reference gene selection: <SELECT NAME='refgene' onChange='SetReferenceSequence()'>");	fprintf ( stdout, "<OPTION VALUE = '1' SELECTED>Select HXB2 reference genes" );	fprintf ( stdout, "<OPTION VALUE = '2'>Provide a file with custom reference genes" );	/*fprintf ( stdout, "<OPTION VALUE = '3'>Use the longest read in the 454 file as a reference" );*/	fprintf ( stdout, "</SELECT></DIV>" );			fprintf ( stdout, "<DIV class = 'RepClassSM' id = 'hxb2ref'>" );		fprintf (stdout, "<TABLE BORDER = '0'><TR CLASS = 'TRReport' style = 'font-size:small'>");	fprintf (stdout, "<th>HIV-1 gene</th><th>Description</th><th>Select</th><th>View reference</th></TR>\n");	for ( _i = 0; _i < Rows ( RefSeqNames ); _i = _i +1 ) {		seqName = "" + (RefSeqNames[_i][0]^{{"HXB2_"}{""}})^{{"NL4_3"}{""}};		fprintf ( stdout, "<tr CLASS='TRReport", _i%2+1, "' style = 'font-size:x-small'>\n");		fprintf ( stdout, "<td>", RefSeqNames[_i][0], "</td><td>", RefSeqNames[_i][1], "</td>",		"<td><input TYPE='checkbox' ID = 'gene_",_i,"' NAME='chkbx",_i,"' onClick = 'countSelected()' VALUE = '",_i,"'></td>",		"<td><a href='",BASE_CGI_URL_STRING,"viewSequence.pl?ref=",_i,"&gencode=",gencodeID,"&format=0' target='_BLANK'>[nuc]</a><a href='",BASE_CGI_URL_STRING,"viewSequence.pl?ref=",_i,"&gencode=",gencodeID,"&format=1' target='_BLANK'>[aa]</a></td></tr>\n");	}	fprintf ( stdout, "</TABLE></DIV>" );	fprintf ( stdout, "<DIV class = 'RepClassSM' id = 'hxb2submit'>" );	fprintf ( stdout, "<H1 class = 'ErrorCap' id = 'GeneSummary'><span id = 'GeneSummaryText'>Selected 0/0 genes</span></H1>");	fprintf ( stdout, "</DIV>" );		fprintf ( stdout, "<DIV class = 'RepClassSM' id = 'customref'>" );		fprintf ( stdout, "Choose a reference file: <input type='file' name='customref'> <span style = 'text-align:right; width: 100%;'><br>" );		fprintf ( stdout, "<TABLE><TR id='code'><TD><a href='", BASEL_URL_STRING, "help/geneticcodes.php' class = 'INFO'>Genetic code</a></TD><TD><SELECT NAME='code'>" );	fprintf ( stdout, 	"<option value = '0' SELECTED>Universal code",						"<option value = '1'>Vertebrate mitochondrial DNA code",						"<option value = '2'>Yeast mitochondrial DNA code",						"<option value = '3'>Mold, Protozoan and Coelenterate mt; Mycloplasma/Spiroplasma",						"<option value = '4'>Invertebrate mitochondrial DNA code",						"<option value = '5'>Ciliate, Dasycladacean and Hexamita Nuclear code",						"<option value = '6'>Echinoderm mitochondrial DNA code",						"<option value = '7'>Euplotid Nuclear code",						"<option value = '8'>Alternative Yeast Nuclear code",						"<option value = '9'>Ascidian mitochondrial DNA code",						"<option value = '10'>Flatworm mitochondrial DNA code",						"<option value = '11'>Blepharisma Nuclear code" );			fprintf ( stdout, "</TD></TR></TABLE></SELECT></DIV>" );		fprintf ( stdout, "<div class = 'RepClassSM' id = 'longreadsubmit'>" );	fprintf ( stdout, "<input type='submit' value='Start UDS Analysis'>" );	fprintf ( stdout, "</DIV>" );			fprintf (stdout,"<input type = 'Hidden' name = 'sequences' value = '",ds.species,"'>",					"<input type = 'Hidden' name = 'method' value = '99'>",					"<input type = 'Hidden' name = 'filename' value='",jobID,"'>",					"<input type = 'Hidden' name = 'skipQC' value='0'>",					"<input type = 'Hidden' name = 'gotQual' value='",gotQual,"'>",					"<DIV style = 'margin:10px; text-align:center;'>",					"</FORM></DIV>");			fileInformation 					 = {};	fileInformation ["Sequences"] 		 = "INTEGER";	fileInformation ["Timestamp"] 		 = "REAL";	fileInformation ["Original"] 		 = "TEXT";		_CheckDBID (slacDBID,"UDS_FILE_INFO",fileInformation);		record = {};	record ["Sequences"] = ds.species;	record ["Timestamp"] = Format(Time(1),20,0);	record ["Original"] = originalFileName;		_InsertRecord (slacDBID,"UDS_FILE_INFO", record);	_closeCacheDB (slacDBID);}