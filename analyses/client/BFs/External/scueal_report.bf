ExecuteAFile ("../../Shared/HyPhyGlobals.ibf");ExecuteAFile ("../../Shared/GrabBag.bf");ExecuteAFile ("../../Shared/ReadDelimitedFiles.bf");ExecuteAFile ("../../Shared/DBTools.ibf");fscanf		 (stdin, "String", arg);function	 reportSequence (str, wrap, space){	fprintf     (stdout,  "\n<pre style = 'font-family:Courier New,Monospace; font-size: 12px;border: 1px solid black; background-color: white; padding: 5px;'>\n\n");	_globalCoord = 0;	for (_k = 0; _k < Abs(str); _k = _k+wrap)	{		upto  = Min (Abs(str)-1, _k + wrap -1);		substr = str[_k][upto];		upto = Abs(substr);		indexStr = ""; indexStr * upto;		seqStr   = ""; seqStr * upto;		for (_k2 = 0; _k2 < upto; _k2=_k2+space)		{			if (_k2)			{				seqStr * " ";				indexStr * " ";			}			if (Abs(substr) >= _k2+space )			{				seqStr * substr [_k2][_k2+space-1];				_globalCoord = _globalCoord + space;				indexStr * Format (_globalCoord,space,0);			}			else			{				seqStr * substr [_k2][Abs(substr)-1];						}		}		indexStr * 0; seqStr * 0;		fprintf (stdout, indexStr, "\n", seqStr, "\n");	}	fprintf (stdout, "\n</pre>\n");	return "";}arg = splitOnRegExp (arg,"-");if (Abs (arg) != 2){	defaultErrorOut ("Argument Error");	return 0;}slacDBID 		 = _openCacheDB      (arg[0]);haveSCUEAL	     = _TableExists (slacDBID, "SUBTYPING_RESULTS");if (haveSCUEAL){	sequenceInfo = _ExecuteSQL  (slacDBID,"SELECT * FROM SUBTYPING_RESULTS WHERE FILE_INDEX = " + arg[1]);		if (Abs(sequenceInfo) != 1)	{		defaultErrorOut ("Invalid sequence index");		_closeCacheDB (slacDBID);		return 0;	}		sequenceInfo = sequenceInfo[0];		fprintf (stdout, "<H1 class = 'SuccessCap'>SCUEAL report for sequence ", printALongString(sequenceInfo["ID"],25), "</H1>");	fprintf (stdout, _makeJobIDHTMLSimpleExtra(arg[0],arg[0] + "_scueal.php","Back to SCUEAL results"));		fprintf (stdout, "<DIV CLASS = 'RepClassSM'><span style='font-variant:small-caps;font-size:18px;'><b>Summary.</b></span>",					 "<DL>",					 "<DT class = 'DMDT'>Inferred Subtype:<DD>", sequenceInfo["SIMPLIFIED"],					 "<DT class = 'DMDT'>Expanded Inferred Subtype:<DD>", sequenceInfo["SUBTYPE"],					 "<DT class = 'DMDT'>Confidence in inferred subtype:<DD>", Format(100*(0+sequenceInfo["SUPPORT"]),5,2), "%",					 "<DT class = 'DMDT'>Evidence in support of recombination:<DD>", Format(100*(0+sequenceInfo["REC_SUPPORT"]),5,2), "%",					 "<DT class = 'DMDT'>Evidence in support of <u>intra-subtype</u> recombination:<DD>", Format(100*(0+sequenceInfo["INTRA_REC_SUPPORT"]),5,2), "%</DL>"					 );		fprintf (stdout, "</DIV>"); 	bpReport = sequenceInfo["BREAKPOINTS"];		if (Abs (bpReport) > 1)	{		bps 	= splitOnRegExp (bpReport,"\\;");		fprintf (stdout, "<DIV CLASS = 'RepClassSM'><span style='font-variant:small-caps;font-size:18px;'><b>Breakpoint report.</b></span><p>Locations are reported relative to the query sequence",						 "<TABLE BORDER = 0 SPACING = '10px'><TR class = 'HeaderClassSM'><TD>Location</TD><TD>Left bound on 95% CI</TD><TD>Right bound on 95% CI</TD></TR>");				for (k = 0; k < Abs (bps); k=k+1)		{			bpsM = bps[k]$"([0-9]+)\\(([0-9]+)\\-([0-9]+)\\)";			if (Abs(bpsM)>2)			{				bpI = (bps[k])[bpsM[2]][bpsM[3]];				bpL = (bps[k])[bpsM[4]][bpsM[5]];				bpR = (bps[k])[bpsM[6]][bpsM[7]];				fprintf (stdout, "<TR CLASS = 'TRReport", 1+(k%2), "'><TD>",bpI,"</TD><TD>",bpL,"</TD><TD>",bpR,"</TD></TR>");			}		}		fprintf (stdout, "</TABLE></DIV>");	}		fprintf (stdout, "<DIV CLASS = 'RepClassSM'><span style='font-variant:small-caps;font-size:18px;'><b>Query sequence.</b></span><p>",					 reportSequence(sequenceInfo["SEQUENCE"],80,10)					 );		fastaSeq = ">" + sequenceInfo["ID"] + "\n" + sequenceInfo["SEQUENCE"];	fprintf (stdout, "Subtype this sequence using: <p><TABLE BORDER = 0 SPACING = '0px'>",				"<TR><TD><form style = 'display:inline' action = 'http://www.ncbi.nlm.nih.gov/projects/genotyping/genotype.cgi' method='post' target = '_blank'><input type = 'submit' value = 'NCBI BLAST genotyping tool' style = 'background-color:purple; color:white; font-size:12px;'> <input type = 'hidden' name = 'BLAST_DATABASE' value ='1'>",				"<input type = 'hidden' name = 'QUERY_SEQUENCE' value = '",fastaSeq,"'></form></td><td><a href = 'http://www.ncbi.nlm.nih.gov/pubmed/15215470' target = '_blank' class = 'INFO'>PubMed</a></td>",				"<TD><form style = 'display:inline' target = '_blank' action = 'http://www.vgb.ucl.ac.uk/star/s_new.cgi' method='post'><input type = 'submit' value = 'STAR' style = 'background-color:purple; color:white; font-size:12px;'> <input type = 'hidden' name = 'data' value ='L'><input type = 'hidden' name = 'type' value ='nucleotide'>",				"<input type = 'hidden' name = 'seq' value = '",fastaSeq,"'></form></td><td><a href = 'http://www.ncbi.nlm.nih.gov/pubmed/16046498' target = '_blank' class = 'INFO'>PubMed</a></td></tr>",				"<TR><TD><form style = 'display:inline' target = '_blank' action = 'http://dbpartners.stanford.edu/RegaSubtyping/genotype.php?cmd=analyze' method='post'><input type = 'submit' value = 'REGA' style = 'background-color:purple; color:white; font-size:12px;'>",				"<input type = 'hidden' name = 'sequence' value = '",fastaSeq,"'></form></td><td><a href = 'http://www.ncbi.nlm.nih.gov/pubmed/16076886' target = '_blank' class = 'INFO'>PubMed</a></td>",				"<TD><form style = 'display:inline' target = '_blank' action = 'http://www.hiv.lanl.gov/cgi-bin/RIP3/RIP.cgi' method='post'><input type = 'submit' value = 'RIP' style = 'background-color:purple; color:white; font-size:12px;'><input type = 'hidden' name = 'BackgroundOption' value ='consensus'><input name='page' type='hidden' value='1'><input name='INCLUDE01' type='hidden' value='1'>",				"<input type = 'hidden' name = 'WindowSize' value = '400'><input type = 'hidden' name = 'StatSignif' value = '90'><input type = 'hidden' name = 'GapOption' value = '1'>",				"<input type = 'hidden' name = 'AmbigCodes' value = '1'>",				"<input type = 'hidden' name = 'QUERY' value = '",fastaSeq,"'></form></td><td><a href = 'http://www.hiv.lanl.gov/content/sequence/RIP/RIPexplain.html' target = '_blank' class = 'INFO'>LANL</a></td></tr>"								);	fprintf (stdout, "</table></DIV>");	fprintf (stdout, "<DIV CLASS = 'RepClassSM'><span style='font-variant:small-caps;font-size:18px;'><b>Detailed report.</b> [Download as a <a href = '",BASE_CGI_URL_STRING,"renderPSImage.pl?file=",arg[1],"&dir=",arg[0],"&doPDF'>PDF</a>]</span><p>",					 "<img border = '1' src = '", 				 	 BASE_CGI_URL_STRING,"renderPSImage.pl?file=",arg[1],"&dir=",arg[0], 				 	 "'>"					 );		fprintf (stdout, "</DIV>");}else{	defaultErrorOut ("SCUEAL analysis has not been run for this file");}_closeCacheDB (slacDBID);